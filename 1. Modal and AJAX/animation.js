window.onload = () => {

  let container = document.getElementById('container');

  let positions = ["502","503","504","514","515","516","519","520","521","522","523","524","525","534","535","536","545","546","547","552","553","554","555", "563","564","565","566","569","570","571","572","573","574","575","576","584","585","586","595","596","597","602","603","604","605","606","612","613","614","615","616","619","620","621","622","623","624","625","626","627","634","635","636","645","646","647","652","653","654","655","656","657","661","662","663","664","665","666","669","670","671","672","673","674","675","676","677","678","684","685","686","695","696","697","702","703","704","705","706","707","708","710","711","712","713","714","715","716","719","720","721","725","726","727","728","729","734","735","736","745","746","747","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","769","770","771","776","777","778","779","780","784","785","786","795","796","797","802","803","804","806","807","808","809","810","811","812","814","815","816","819","820","821","827","828","829","830","831","834","835","836","845","846","847","852","853","854","857","858","859","860","861","864","865","866","869","870","871","878","879","880","881","884","885","886","895","896","897","902","903","904","908","909","910","914","915","916","919","920","921","929","930","931","934","935","936","945","946","947","952","953","954","959","964","965","966","969","970","971","979","980","981","984","985","986","995","996","997","1002","1003","1004","1014","1015","1016","1019","1020","1021","1029","1030","1031","1034","1035","1036","1045","1046","1047","1052","1053","1054","1064","1065","1066","1069","1070","1071","1079","1080","1081","1084","1085","1086","1095","1096","1097","1102","1103","1104","1114","1115","1116","1119","1120","1121","1129","1130","1131","1134","1135","1136","1145","1146","1147","1152","1153","1154","1164","1165","1166","1169","1170","1171","1179","1180","1181","1184","1185","1186","1195","1196","1197","1202","1203","1204","1214","1215","1216","1219","1220","1221","1229","1230","1231","1234","1235","1236","1245","1246","1247","1252","1253","1254","1264","1265","1266","1269","1270","1271","1279","1280","1281","1284","1285","1286","1295","1296","1297","1302","1303","1304","1314","1315","1316","1319","1320","1321","1329","1330","1331","1334","1335","1336","1345","1346","1347","1352","1353","1354","1364","1365","1366","1369","1370","1371","1379","1380","1381","1384","1385","1386","1395","1396","1397","1402","1403","1404","1414","1415","1416","1419","1420","1421","1429","1430","1431","1434","1435","1436","1445","1446","1447","1452","1453","1454","1464","1465","1466","1469","1470","1471","1479","1480","1481","1484","1485","1486","1495","1496","1497","1502","1503","1504","1514","1515","1516","1519","1520","1521","1529","1530","1531","1534","1535","1536","1545","1546","1547","1552","1553","1554","1564","1565","1566","1569","1570","1571","1579","1580","1581","1584","1585","1586","1595","1596","1597","1602","1603","1604","1614","1615","1616","1619","1620","1621","1628","1629","1630","1631","1634","1635","1636","1637","1644","1645","1646","1647","1652","1653","1654","1664","1665","1666","1669","1670","1671","1677","1678","1679","1680","1681","1684","1685","1686","1687","1688","1693","1694","1695","1696","1697","1702","1703","1704","1714","1715","1716","1719","1720","1721","1726","1727","1728","1729","1730","1735","1736","1737","1738","1739","1742","1743","1744","1745","1746","1752","1753","1754","1764","1765","1766","1769","1770","1771","1775","1776","1777","1778","1779","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1802","1803","1804","1814","1815","1816","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1837","1838","1839","1840","1841","1842","1843","1844","1852","1853","1854","1864","1865","1866","1869","1870","1871","1872","1873","1874","1875","1876","1877","1888","1889","1890","1891","1892","1893","1902","1903","1904","1914","1915","1916","1919","1920","1921","1922","1923","1924","1925","1926","1939","1940","1941","1942","1952","1953","1954","1964","1965","1966","1969","1970","1971","1972","1973","1974","1975","1990","1991"]

  let alive = positions.map((cell) => {
    return parseInt(cell ,10)
  })

  renderField = (alive) => {
    let field = []

    for (let b = 0; b <=  2499; b++) { field.push(`<div key=${b} class="dead" id=${b}></div>`) }
    alive.map((cell) => { return field[cell] = `<div key=${cell} class="alive" id=${cell}/></div>` })

    document.getElementById('body').innerHTML = field.join('')
  }

  checkAlignmentX = (cell, newPos) => {
    return Math.floor(cell / 50) === Math.floor(newPos / 50)
  }

  checkAlignmentY = (cell, newPos) => {
    let check = cell - newPos
    return check % 50 === 0
  }

  checkDiagonal = (cell, newPos) => {
    let direction = (newPos % 50) - (cell % 50)
    return direction > 0
  }

  createRandomPositions = () => {
    let randomBricks = []

    alive.map((cell) => {
      let unique = false
      while (unique === false) {
        let number = getRandom(0,2499)
        if (randomBricks.indexOf(number) === -1) {
          unique = true
          randomBricks.push(number)
        }
      }
      return randomBricks
    })

    return randomBricks
  }

  getRandom = (min, max) => {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  renderField(alive)
  let randomBricks = createRandomPositions()

  setTimeout(() => {
    let interv = setInterval(() => {
      let equal = true
      for (let b = 0; b <=  alive.length - 1; b++) {
        if (alive[b] < 0) alive[b] += 2499
        if (alive[b] !== randomBricks[b]){
          if (checkAlignmentX(alive[b],randomBricks[b])) {
            alive[b] > randomBricks[b] ? alive[b] -= 1 : alive[b] += 1;
          } else if (checkAlignmentY(alive[b],randomBricks[b])){
            alive[b] > randomBricks[b] ? alive[b] -= 50 : alive[b] += 50;
          } else if (checkDiagonal(alive[b],randomBricks[b])) {
            alive[b] > randomBricks[b] ? alive[b] -= 49 : alive[b] += 51;
          } else {
            alive[b] > randomBricks[b] ? alive[b] -= 51 : alive[b] += 49;
          }
          equal = false
        }
      }
      renderField(alive)
      if (equal) {
        clearInterval(interv);
        container.style.display = 'block';
        getData()
        console.log('hi')     ;
      }
    }, 100)
  },3000)
}
